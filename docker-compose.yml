version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: mlops_postgres
    environment:
      POSTGRES_DB: ml_ops_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - mlops_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d ml_ops_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fastapi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mlops_network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password

  # FastAPI Application
  mlops_app:
    build: .
    container_name: mlops_app
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://root:root@postgres:5432/ml_ops_db
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - postgres
      - redis
    networks:
      - mlops_network
    volumes:
      - .:/app
      - /app/venv
      - /app/__pycache__
      - /app/.pytest_cache
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  mlops_network:
    driver: bridge
